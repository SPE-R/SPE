\SweaveOpts{results=hide, prefix.string=./graph/effects}


\section{Estimation of effects: simple and more complex} %% 1.8

This exercise deals with analysis of metric and binary 
response variables. 
We start with simple estimation of effects of a binary, categorical or
a numeric explanatory variable, the explanatory or exposure variable of interest. 
Then evaluation of potential  modification and/or confounding by other variables
is considered by stratification by and adjustment/control for these variables.
Use of function \texttt{effx()} for such tasks is introduced together
with functions \texttt{lm()} and \texttt{glm()} that can be used for more
general linear and generalized linear models.  Finally, more complex 
spline modelling for the effect of a numeric exposure variable is
illustrated.


\subsection{Response and explanatory variables} %% 1.8.1


Identifying the \textit{response} or \textit{outcome variable} correctly is the key
to analysis. The main types are:
\begin{itemize}
\item Metric or continuous (a measurement with units).
\item Binary (``yes'' vs. ''no'', coded 1/0), or proportion.
\item Failure in person-time, or incidence rate. 
\end{itemize}
All these response variable are numeric.

Variables on which the response may depend are called \textit{explanatory
variables} or \textit{regressors}. They can be categorical factors or numeric variables.
A further important aspect of explanatory variables is the role they will play in the analysis.

\begin{itemize}
\item Primary role: exposure.
\item Secondary role: confounder and/or effect-measure modifier.
\end{itemize}


The word ``\textit{effect}'' 
is used here as a general term referring to ways of
contrasting or comparing the expected values of the response variable at
different levels of an explanatory 
variable. The main comparative measures or effect measures are:
\begin{itemize}
\item Differences in means for a metric response.
\item Ratios of odds for a binary response.
\item Ratios of rates for a failure or count response.
\end{itemize}

Other kinds of \textit{contrasts} between exposure groups
include (a) ratios of geometric means for positive-valued  
metric outcomes,
(b) differences and ratios between proportions 
(risk difference and risk ratio), and (c)
differences between incidence or mortality rates.

Note that in spite of using the causally loaded word ``effect'',
we treat \textit{outcome regression} modelling
here primarily with descriptive or predictive aims in mind. 
Traditionally, these types of models have also been used
to estimate \textit{causal effects} of exposure variables
from the pertinent regression coefficients. 
More serious causal analysis is introduced in the lecture and practical
on Saturday afternoon, and modern approaches 
to estimate causal effects will be  considered
on Tuesday afternoon.  

\subsection{Data set \texttt{births} } %% 1.8.2

We shall use the \texttt{births} data to illustrate 
different aspects in estimating effects of various exposures on a metric response variable
\texttt{bweight} = birth weight, recorded in grams.
% To save too much typing these commands are in the
% leaning on the same housekeeping file \texttt{births-house.r} as in the tabulation exercise. 
% which can be run with the command \texttt{source("./data/births-house.r")} (or from your editor)
\begin{enumerate} 
\item
Load the packages needed in this exercise and the data set, and look at its content
<<Run births-house>>=
library(Epi)
library(mgcv)
data(births)
str(births)
@
\item
Because all variables are numeric we need first to do a little housekeeping. 
Two of them are directly converted into factors.
Categorical versions of two continuous variables are created by function {\tt cut()}.
%% Also, express birth weights in kilograms
<<>>=
births$hyp <- factor(births$hyp, labels = c("Normo", "Hyper"))
births$sex <- factor(births$sex, labels = c("M", "F"))
births$agegrp <- cut(births$matage, 
    breaks = c(20, 25, 30, 35, 40, 45), right = FALSE)
births$gest4 <- cut(births$gestwks, 
    breaks = c(20, 35, 37, 39, 45), right = FALSE)
@
\item
Have a look at univariate summaries of the different variables in the data; especially
the location and dispersion of the distribution of  \texttt{bweight}.
<<summary>>=
summary(births)
with(births, sd(bweight) )
@
\end{enumerate}

\subsection{Simple estimation with  \texttt{effx()}, \texttt{lm()} and \texttt{glm()} }  %% 1.8.3

We are ready to analyze the effect of \texttt{sex} on \texttt{bweight}.
A binary explanatory variable, like \texttt{sex}, leads to an elementary
 two-group comparison of group
means for a metric response. 
\begin{enumerate} % [resume]
\item
Comparison of two groups is commonly done by the conventional $t$-test and
the associated confidence interval. 
<<t test for sex on bweight>>=
with( births, t.test(bweight ~ sex, var.equal=TRUE) )
@
The $P$-value refers to the test
of the  null hypothesis that there is no effect of \texttt{sex} on birth weight
 (quite an uninteresting null hypothesis in itself!). However, \texttt{t.test()} does not provide
the point estimate for the effect of sex; only the test result and a confidence interval.
\item
The function \texttt{effx()} in \texttt{Epi}
is intended to introduce the estimation of effects in epidemiology, together with the related ideas of stratification and controlling, i.e. adjustment for confounding, 
without the need for familiarity with statistical modelling.
It is in fact a wrapper of function {\tt glm()} that fits generalized linear models. \\
-- Now, let's do the same analysis with \texttt{effx()}
<<Effects of sex on bweight>>=
effx(response=bweight, type="metric", exposure=sex, data=births)
@
The estimated effect of sex on birth weight, measured as a difference 
in means between girls and boys, 
is $-197$ g.
Either the output from \texttt{t.test()} above or the command
<<Table of mean birth weight by sex>>=
stat.table(sex, mean(bweight), data=births)
@
confirms this ($3032.8-3229.9=-197.1$). 
\item
The same task can easily be performed by {\tt lm()} or by {\tt glm()}. The main argument in both 
is the {\it model formula}, the left hand side being the response variable and the right hand side
after ``$\sim$'' defines the explanatory variables and their 
joint effects on the response. Here the only
explanatory variable is the binary factor {\tt sex}. With {\tt glm()} one specifies the
{\tt family}, i.e. the assumed distribution of the response variable, but in case you use
{\tt lm()}, this argument is not needed, because {\tt lm()} fits only models for metric responses
assuming Gaussian distribution.
<<lm of bweight by sex>>=
m1 <- glm(bweight ~ sex, family=gaussian, data=births)
summary(m1)
@
 Note the amount of output that {\tt summary()} method produces.
The point estimate plus confidence limits can, though, be concisely obtained by function 
{\tt ci.lin()} found in \texttt{Epi} package.  
<<ci.lin of bweight by sex>>=
round( ci.lin(m1)[ , c(1,5,6)] , 1)
@
\item
Now, use \texttt{effx()} to find the effect of \texttt{hyp} (maternal hypertension)
 on \texttt{bweight}.
<<Effects of hyp on bweight, echo=FALSE>>=
effx(response=bweight, type="metric", exposure=hyp, data=births)
@
\end{enumerate}

\subsection{Factors on more than two levels}  %%  1.8.4

The variable \texttt{gest4} became as the result of cutting \texttt{gestwks}
 into 4 groups with left-closed and right-open boundaries  [20,35) [35,37) [37,39) [39,45).
\begin{enumerate} % [resume]
\item
We shall find the effects of \texttt{gest4} on the metric response \texttt{bweight}.
<<Effects of gest4 (four levels) on bweight >>=
effx(response=bweight,typ="metric",exposure=gest4,data=births)
@
There are now 3 effect estimates:
\begin{verbatim}
[35,37) vs [20,35)  857
[37,39) vs [20,35) 1360
[39,45) vs [20,35) 1668
\end{verbatim}
The command
<<Table of mean bweight by gest4 >>=
stat.table(gest4,mean(bweight),data=births)
@
confirms that the effect of \texttt{agegrp} (level~2 vs level~1) is $2590-1733=857$, etc.
\item
Compute these estimates by {\tt lm()} and find out how the coefficients are related to the group means
<<lm of gest4 on bweight>>=
m2 <- lm(bweight ~ gest4, data = births)
round( ci.lin(m2)[ , c(1,5,6)] , 1)
@
\end{enumerate}

\subsection{Stratified effects, and interaction or effect-measure modification} %% 1.8.5

We shall now examine whether and to what extent the 
``effect''  of \texttt{hyp}  on \texttt{bweight}, i.e. the 
 mean difference between hypertensive and normotensive mothers, 
 varies by \texttt{gest4} without assigning 
 causal interpretation to the estimated contrasts.
\begin{enumerate} % [resume]
\item
The following ``interaction plot''
shows how the mean {\tt bweight} depends jointly on {\tt hyp} and {\tt gest4}
<<bweight-by-hyp-gest4, fig = F>>=
par(mfrow=c(1,1))
with( births, interaction.plot(gest4, hyp, bweight) )
@
It appears that the mean difference in {\tt bweight} between 
hypertensive and normotensive 
mothers is related to gestational age.
\item
Let us get numerical values for the mean differences
in the different {\tt gest4} categories:
<<Effect of hyp on bweight stratified by gest4 >>=
effx(bweight, type="metric", exposure=hyp, strata=gest4,data=births)
@
The estimated effects of \texttt{hyp} in the different strata defined by \texttt{gest4} thus
range from about $-100$ g among those with $\geq 39$ weeks of gestation to about $-700$ g among those
with $< 35$ weeks of gestation. The error margin especially 
around the latter estimate is quite wide, though.
The $P$-value 0.055  from the test for 
\textit{effect(-measure) modification} indicates weak evidence 
against the null hypothesis of ``no interaction between {\tt hyp} and {\tt gest4}''.
On the other hand, this test may well be not very sensitive given
 the small number of preterm babies in these data. 
\item
Stratified estimation of effects can also be done by {\tt lm()},
 and you should get the same results:
<<lm for hyp on bweight stratified by gest4 >>=
m3 <- lm(bweight ~ gest4/hyp, data = births)
round( ci.lin(m3)[ , c(1,5,6)], 1) 
@
\item
An equivalent model with an explicit \textit{product term} or
{\it interaction term} between {\tt gest4} and {\tt hyp} is
fitted as follows
<<lmI for hyp on bweight stratified by gest4 >>=
m3I <- lm(bweight ~ gest4 + hyp + gest4:hyp, data = births)
round( ci.lin(m3I)[ , c(1,5,6)], 1) 
@
From this  output you would find a familiar estimate $-673$ g for those $< 35$ gestational weeks. 
The remaining coefficients are estimates of the interaction effects such that e.g. $515 = -158 - (-673)$ g 
describes the contrast in the effect of {\tt hyp} on {\tt bweight}
 between those 35 to $< 37$ weeks and those $< 35$ weeks of gestation.
\item
Perhaps a more appropriate reference level for the categorized gestational age would be the highest one.
Changing the reference level, here to be the 4th category,
 can be done by {\tt Relevel()} function in the {\tt Epi} package,
after which an equivalent interaction model is fitted, now using a shorter
expression for it in the model formula:
<<lmIb for hyp on bweight stratified by gest4b >>=
births$gest4b <- Relevel( births$gest4, ref = 4)
m3Ib <- lm(bweight ~ gest4b*hyp, data = births)
round( ci.lin(m3Ib)[ , c(1,5,6)], 1) 
@
Notice now the coefficient $-91.6$ for {\tt hyp}. 
It estimates the contrast \texttt{"Hyper"} vs. \texttt{"Normo"} on
{\tt bweight} among those with $\geq 39$ weeks of gestation.
The estimate $-88.5$ g = $-180.1 -(-91.6)$ g describes the additional
effect of {\tt hyp} in the category 37 to 38 weeks of gestation upon
that in the reference class.
\item
At this stage it is interesting to compare the results from the
interaction models to those from the corresponding  
``{\it main effects}'' model, in which the effect of {\tt hyp} 
is assumed not to be modified by {\tt gest4}:
<<lmI for hyp on bweight stratified by gest4 >>=
m3M <- lm(bweight ~ gest4 + hyp, data = births)
round( ci.lin(m3M)[ , c(1,5,6)], 1) 
@
The estimate $-201$ g describing the overall  contrast
between hypertensive and normotensive mothers is obtained
as a weighted average of the stratum-specific estimates 
that were got by {\tt effx()} above. 
%% It is a meaningful estimate adjusting for {\tt gest4} 
%% insofar as it is reasonable to assume
%% that the effect of {\tt hyp} is not modified by {\tt gest4}. 
This assumption or the
``no interaction'' null hypothesis can formally be tested by a common deviance test.
<<test for hyp-gest4 interaction on bweight>>=
anova(m3I, m3M)
@
The $P$-value is practically the same as before,
when the interaction was tested in  {\tt effx()}.
However, in spite of obtaining a ``non-significant'' 
result from this test, the possibility
of a real effect-measure modification
should not be ignored in this case.

\item
Now, use \texttt{effx()} to stratify (i) the effect of \texttt{hyp} on \texttt{bweight} by \texttt{sex}
 and then (ii) perform the stratified analysis using the two ways of fitting an interaction model 
with {\tt lm}.
<<Effects of hyp on lowbw stratified by sex, echo=F>>=
effx(bweight, type="metric", exposure=hyp, strata= sex, data=births)
m4S <- lm(bweight ~ sex/hyp, data = births)
round( ci.lin(m4S)[ , c(1,5,6)], 1) 
m4I <- lm(bweight ~ sex + hyp + sex:hyp, data = births)
round( ci.lin(m4I)[ , c(1,5,6)], 1) 
@

 Look at the results. Is there evidence for the effect of {\tt hyp} being modified by {\tt sex}?
\end{enumerate}

\subsection{Controlling or adjusting for the effect of hyp for sex}  %% 1.8.6

The effect of \texttt{hyp} is \textit{controlled for} -- or \textit{adjusted for} -- \texttt{sex}
by first looking at the estimated effects of \texttt{hyp} in the two stata defined by \texttt{sex}, and then combining these effects if they seem sufficiently similar. In this case the estimated effects were $-496$ and $-380$ which look quite similar (and the $P$-value against ``no interaction'' was quite large, too),
 so we can perhaps combine them, and control for \texttt{sex}.
\begin{enumerate} % [resume]
\item
The combining is done by declaring \texttt{sex} as a control variable:
<<Effect of hyp on bweight controlled for sex >>=
effx(bweight, type="metric", exposure=hyp, control=sex, data=births)
@
\item
The same is done with {\tt lm()} as follows: 
<<lm for hyp on bweight controlled for sex >>=
m4 <- lm(bweight ~ sex + hyp, data = births)
ci.lin(m4)[ , c(1,5,6)]  
@
The estimated effect of \texttt{hyp} on \texttt{bweight} controlled for \texttt{sex} is thus $-448$ g.
There can be more than one control variable, e.g \texttt{control=list(sex,agegrp)}.

Many people go straight ahead and control for variables which are likely to confound the effect of exposure without bothering to stratify first, but usually it is useful to stratify first.
\end{enumerate}

\subsection{Numeric exposures}  %% 1.8.7

If we wished to study the effect of gestation time on the baby's birth 
weight then  \texttt{gestwks} is a numeric exposure variable.  
\begin{enumerate} % [resume]
\item
Assuming that the relationship 
of the response with \texttt{gestwks} is roughly linear 
(for a continuous response), 
% or log-linear (for a binary or failure rate response) 
we can estimate the linear effect of \texttt{gestwks}, 
both with {\tt effx()} and with {\tt lm()} as follows:
<<Linear effect of gestwks on bweight >>=
effx(response=bweight, type="metric", exposure=gestwks,data=births)
m5 <- lm(bweight ~ gestwks, data=births) ; ci.lin(m5)[ , c(1,5,6)]
@
We have fitted a simple linear regression model and 
obtained estimates of the
two regression coefficient: \texttt{intercept} and \texttt{slope}.
The linear effect of \texttt{gestwks} is thus estimated by the
slope coefficient, which is 197 g per each additional week of gestation.

\begin{comment}
The linear effect of \texttt{gestwks} on the log-odds of \texttt{lowbw} can be estimated similarly:
<<Linear effect of gestwks on lowbw >>=
effx(response=lowbw, type="binary", exposure=gestwks,data=births)
@
The linear effect of \texttt{gestwks} on the log-odds of \texttt{lowbw} is manifested as a reduction by a factor of 0.408 per extra week of gestation, i.e. the odds of a baby having a low birth weight is reduced by a factor of 0.408 per one week increase in gestation.
\end{comment}
\item
You cannot stratify by a numeric variable, 
but you can study the effects of a 
numeric exposure stratified by (say) \texttt{agegrp} with
<<Linear effect of gestwks on bweight stratified by agegrp >>=
effx(bweight, type="metric", exposure=gestwks, strata=agegrp, data=births)
@
You can control/adjust for a numeric variable by putting it in the control list.
\end{enumerate}

\subsection{Checking the assumptions of the linear model}  %% 1.8.8

At this stage it will be best to make some visual check concerning
our model assumptions using \texttt{plot()}. In particular, when the main argument
for the {\it generic function} {\tt plot()} is a fitted {\tt lm} object,
it will provide you some common diagnostic graphs.
\begin{enumerate} % [resume]
\item
To check whether \texttt{bweight} goes up linearly with \texttt{gestwks} try
<<Plot-bweight-by-gestwks, fig = F >>=
with(births, plot(gestwks,bweight))
abline(m5)
@
\item
Moreover, take a look at the basic diagnostic plots for the fitted model.
<<bweight-gestwks-m5-diag, fig= F>>=
par(mfrow=c(2,2))
plot(m5)
@
What can you say about the agreement with data of the assumptions of the 
simple linear regression model, 
like linearity of the systematic dependence, 
homoskedasticity and normality of the error terms? 
\end{enumerate}


\subsection{Penalized spline model}

We shall now continue the analysis such that the apparently curved effect
of {\tt gestwks} is modelled by a {\it penalized spline},
based on the recommendations of Martyn in his lecture of this morning. 

You cannot fit a penalized spline model with \texttt{lm()} or
\texttt{glm()}, Instead, function \texttt{gam()} in package
\texttt{mgcv} can be used for this purpose. Make sure that you have loaded
this package.

\begin{enumerate} % [resume]

\item When calling \texttt{gam()}, the model formula contains
  expression '\texttt{s(X)}' for any explanatory variable \texttt{X},
  for which you wish to fit a smooth function
<<bweight-gestwks-mPs>>= 
mPs <- gam( bweight ~ s(gestwks), data = births)		
summary(mPs)	
@ 
From the output given by \texttt{summary()} you find that the
estimated intercept is equal to the overall mean birth
weight in the data.  The estimated residual variance is given by
``\texttt{Scale est.}''  or from subobject \texttt{sig2} of the fitted
\texttt{gam} object.  Taking square root you will obtain the estimated
residual standard deviation: 445.2 g.
<<mPs-sig2>>=
mPs$sig2
sqrt(mPs$sig2)
@
The degrees of freedom in this model are not computed as simply as in previous
models, and they typically are not integer-valued. However,
the fitted spline seems to consume only a little more degrees of freedom
as an 3rd degree polynomial model would take.
\item 
A graphical presentation of the fitted curve together with the
  confidence and prediction intervals is more informative. 
 Let us first write a
  short function script to facilitate the task. We utilize function \texttt{matshade()} 
  in \texttt{Epi}, which creates shaded areas, and function \texttt{matlines()} which draws 
  lines joining the pertinent end points over the $x$-values for which the
  predictions are computed.
<<plotFitPredInt, ECHO=TRUE>>=
plotFitPredInt <- function( xval, fit, pred, ...)
{
    matshade( xval, fit,  lwd=2, alpha=0.2)
    matshade( xval, pred, lwd=2, alpha=0.2)
    matlines( xval, fit,  lty=1, lwd=c(3,2,2), col=c("red","blue","blue") )
    matlines( xval, pred, lty=1, lwd=c(3,2,2), col=c("red","green","green") )
}
@
\item Finally, create a vector of $x$-values and compute 
the fitted/predicted values as well
as the interval limits at these points from the fitted
model object utilizing
function {\tt predict()}. 
This function creates a matrix of three columns: (1) fitted/predicted
values, (2) lower limits, (3) upper limits and 
make the graph:
<<bweight-gestwks-mPs-plot, fig=FALSE>>=
nd <- data.frame(gestwks = seq(24, 45, by = 0.25) ) 	
pr.Ps <- predict( mPs, newdata=nd, se.fit=TRUE )
str(pr.Ps) # with se.fit=TRUE, only two columns: fitted value and its SE
fit.Ps <- cbind(pr.Ps$fit, 
                pr.Ps$fit - 2*pr.Ps$se.fit, 
                pr.Ps$fit + 2*pr.Ps$se.fit)
pred.Ps <- cbind(pr.Ps$fit,  # must add residual variance to se.fit^2
                 pr.Ps$fit - 2*sqrt( pr.Ps$se.fit^2 + mPs$sig2), 
                 pr.Ps$fit + 2*sqrt( pr.Ps$se.fit^2 + mPs$sig2))
par(mfrow=c(1,1))
with(births, plot(bweight ~ gestwks, xlim=c(24, 45), 
                  cex.axis=1.5, cex.lab=1.5) )
plotFitPredInt(nd$gestwks, fit.Ps, pred.Ps)
@  
Compare this with the graph on slide 20 of the lecture we had. 
Are you happy with the end result?
\end{enumerate}

\subsection{Analysis of binary outcomes}

Instead of investigating the distribution and determinants
of birth weight as such, it is common in perinatal epidemiology to consider
occurrence of low birth weight; whether birth weight is 
$< 2.5$ kg or not. Variable \texttt{lowbw} with values 1 and 0
in the \texttt{births} data represents that dichotomy.
Let's perform some analyses on that outcome to illustrate effect estimation
and modelling binary outcome.
\begin{enumerate}
\item
We start with simple tabulation 
of the prevalence of \texttt{lowbw} by maternal hypertension
<<lowbw-hyp-table>>=
stat.table( index=list(hyp, lowbw), 
            contents=list(count(), percent(lowbw)),
            margins=TRUE, data=births)
@
It seems that 
the prevalence for hypertensive mothers
is about 18 percent points higher,
or about three times as high as that for normotensive mothers, 
\item
The three comparative measures of prevalences can be obtained by \texttt{glm()}, whereas
\texttt{effx()} gives only odds ratio:
<<lowbw-hyp-comp>>=
binRD <- glm(lowbw ~ hyp, family=binomial(link="identity"), data=births)
round(ci.lin(binRD)[, c(1,2,5:6)], 3)
binRR <- glm(lowbw ~ hyp, family=binomial(link="log"), data=births)
round(ci.lin(binRR, Exp=TRUE)[, c(1,2,5:7)], 3)
binOR <- glm(lowbw ~ hyp, family=binomial(link="logit"), data=births)
round(ci.lin(binOR, Exp=TRUE)[, c(1,2,5:7)], 3)
effx(response=lowbw, type="binary", exposure=hyp, data=births)
@
Check that these results were quite compatible with the
``about'' estimates given in the previous item.
How well is the odds ratio approximating the risk ratio here?
\item
The prevalence of low birth weight is expected to be inversely related
to gestational age (weeks), as is evident from simple tabulation
<<lowbw-gestwks-table>>=
stat.table( index=list(gest4, lowbw),
          contents=list(count(), percent(lowbw)),
          margins=TRUE, data=births)
@
\item
Let's jump right away to spline modelling of this relationship
<<lowbw-gestwks-spline, fig=FALSE>>=
binm1 <- gam(lowbw ~ s(gestwks), family=binomial(link="logit"), data=births)
summary(binm1)
plot(binm1)
@
Inspect the output. Would you agree, that the logit of the prevalence
of outcome is almost linearly dependent on \texttt{gestwks}?
\item
Encouraged by the result of the previous item, we continue the analysis
with \texttt{glm()} and assuming logit-linearity
<<lowbw-gestwks-logitlin>>=
binm2 <- glm(lowbw ~ I(gestwks-40), family=binomial(link="logit"), data=births)
round(ci.lin(binm2, Exp=TRUE)[, c(1,2,5:7)], 3)
@
Inspect the results. How do you interpret the estimated coefficients
and their exponentiated values?
\item
Instead of fitted logits, it can be more informative
to plot the fitted prevalences against \texttt{gestwks},
in which we utilize the previously created data frame \texttt{nd}
<<lowbw-gestwks-pred, fig=FALSE>>=
predm2 <- predict(binm2, newdata=nd, type="response")
plot( nd$gestwks, predm2, type="l")
@
The curve seems to cover practically the whole range of
the outcome probability scale with a relatively 
steep slope between about 33 to 37 weeks. 
\item
As with numeric birth weight, it may be of interest,
whether the effect of \texttt{gestwks} is modified
by maternal hypertension, so let's fit
an interaction model and view the results
<<lowbw-gestwks-hyp>>=
binm3 <- glm(lowbw ~ hyp*I(gestwks-40), family=binomial, data=births)
round(ci.lin(binm3, Exp=TRUE)[, c(1,2,5:7)], 3)
@
How would you interpret the coefficients and their antilogarithms here?
\item
Even though there seems to be no sufficient evidence
for effect-measure modification, it can be of interest
to compare both the fitted lines on the logit scale
and the fitted curves on the probability scale between
the two groups. Function \texttt{qlogis()} returns the
value of the logit transformation of the given argument. 
<<lowbw-gestwks-hyp-pred, fig=FALSE>>=
predm3hyp <- predict(binm3, 
   newdata=data.frame(hyp="Hyper", nd), type="response")
predm3nor <- predict(binm3, 
   newdata=data.frame(hyp="Normo", nd), type="response")
par(mfrow=c(1,2))
plot( nd$gestwks, qlogis(predm3hyp), type="l")
lines( nd$gestwks, qlogis(predm3nor), lty=2)
plot( nd$gestwks, predm3hyp, type="l")
lines( nd$gestwks, predm3nor, lty=2)
@
The logit-line starts from a higher level and its slope is steeper
for the hypertensive mothers, which sounds reasonable.
However, the two lines
appear to cross at about 38 weeks. On the other hand, the vertical difference
of the two probability curves appears discernible only in the area
from about 32 to 38 weeks of gestation

When interpreting these findings, one needs to keep in mind that
the precision of these curves is very low, because of 
the small number of outcome cases overall. 

\end{enumerate}
