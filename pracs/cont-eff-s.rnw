\SweaveOpts{results=verbatim}

\section{Estimation and reporting of curved effects}

This exercise deals with modelling of curved effects of continuous explanatory variables
both on a metric response assuming the Gaussian distribution 
and on a count or rate outcome based on the Poisson family.

In the first part we continue our analysis on gestational age on birth weight
focussing on fitting spline models, both unpenalized and a penalized one.

In the second part we analyse the \texttt{testisDK} data found in the
\texttt{Epi} package. % already introduced and analyzed in the previous lecture, 
It contains the numbers of cases of testis
cancer and mid-year populations (person-years) in 1-year age groups
 in Denmark during 1943--96. In this analysis we apply Poisson regression 
on the incidence rates treating 
age and calendar time, first as categorical but then fitting a penalized spline model.

\subsection{Data {\tt births}: Simple linear regression and 3rd degree polynomial}

Recall what was done in items 17 to 24 of the Exercise on simple estimation of effects,
in which a simple linear regression and a 3rd degree polynomial were fitted.
The main results are also shown on slides 6, 8, 9, and 20 of the lecture
on linear models.
\begin{enumerate}
\item
Make a basic scatter plot and draw the fitted line from a simple linear regression on it.
<<data-births, echo=T, fig=T>>=
library(Epi)
data(births)
with(births, plot(gestwks, bweight))
mlin <- lm(bweight ~ gestwks, data = births )
abline(mlin)
@
\item
Repeat also the diagnostic plots of this simple model
<<diag-lin, echo=T, fig=T>>=
par(mfrow=c(2,2))
plot(mlin)
@
Some deviation from the linear model is apparent.
\end{enumerate}

\subsection{Fitting a natural cubic spline}

A popular approach for flexible modelling is based on natural regression splines, which have
 more reasonable tail behaviour than
polynomial regression.
\begin{enumerate}[resume]
\item
By the following piece of code you can fit
a \textit{natural cubic spline} with 5 pre-specified knots 
to be put at 28, 34, 38, 40 and 43 weeks of gestation, respectively, 
determining the degree of smoothing. 
<<bweight-gestwks-Ns5>>=
library(splines)
mNs5 <- lm( bweight ~ Ns( gestwks, 
        knots = c(28,34,38,40,43)), data = births)
round(ci.lin(mNs5)[ , c(1,5,6)], 1)
@ 
These regression coefficients are even less interpretable than those in the 
polynomial model. 
\item
A graphical presentation of the fitted curve
together with the confidence and prediction intervals is more informative:
<<Ns5-pred, fig=T>>=
nd <- data.frame(gestwks = seq(24, 45, by = 0.25) ) 
fit.Ns5 <- predict( mNs5, newdata=nd, interval="conf" )
pred.Ns5 <- predict( mNs5, newdata=nd, interval="pred" )
with(births, plot(bweight ~ gestwks, xlim=c(23, 46),cex.axis= 1.5,cex.lab = 1.5 ) )
matlines( nd$gestwks, fit.Ns5, lty=1, lwd=c(3,2,2), col=c('red','blue','blue') )
matlines( nd$gestwks, pred.Ns5, lty=1, lwd=c(3,2,2), col=c('red','green','green') )
@
Compare this with the 3rd order curve previously fitted (see slide 20 of the lecture).
In a natural spline the curve is constrained to be linear beyond the extreme knots.
\item
Take a look at the basic diagnostic plots from the spline model.
<<cubic-diag, fig=T>>=
par(mfrow=c(2,2))
plot(mNs5)
@
How would you interpret these plots?

The choice of the number of knots and their locations can be quite arbitrary,
and the results are often sensitive to these choices. 

\item
To illustrate arbitrariness and associated 
problems with specification of knots, you may now fit 
another natural spline model like the one above but now with 10 knots
at the following sequence of points: \texttt{seq(25, 43, by = 2)}.
Display graphically the results 
<<bweigth-gestwks-Ns10, echo = F, fig=T>>=		 
mNs10 <- lm( bweight ~ Ns( gestwks, 
        knots = seq(25, 43, by = 2)), data = births)
round(ci.lin(mNs10)[ , c(1,5,6)], 1)
fit.Ns10 <- predict( mNs10, newdata=nd, interval="conf" )
pred.Ns10 <- predict( mNs10, newdata=nd, interval="pred" )
par(mfrow=c(1,1))
with( births, plot( bweight ~ gestwks, xlim = c(23, 46), cex.axis= 1.5, cex.lab = 1.5 )  )
matlines( nd$gestwks, fit.Ns10, lty=1, lwd=c(3,2,2), col=c('red','blue','blue') )
matlines( nd$gestwks, pred.Ns10, lty=1, lwd=c(3,2,2), col=c('red','green','green') )
@
The behaviour of the curve is really wild for small values of \texttt{gestwks}!
\end{enumerate}

\subsection{Penalized spline model}

One way to go around the arbitrariness in the specification of knots is to fit
a \textit{penalized spline} model, which imposes a ``roughness penalty'' on
the curve. Even though a big number of knots are initially allowed, 
the resulting fitted curve will be optimally smooth. 

You cannot fit a penalized spline model with \texttt{lm()} or \texttt{glm()}, 
Instead, function \texttt{gam()} in package \texttt{mgcv} can be used 
for this purpose. 
\begin{enumerate}[resume]
\item
You must first install
R package \texttt{mgcv} into your computer. 
\item
When calling \texttt{gam()}, the model formula contains expression '\texttt{s(X)}'
for any explanatory variable \texttt{X}, for which you wish to
fit a smooth function
<<bweight-gestwks-mPs>>= 
library(mgcv)
mPs <- gam( bweight ~ s(gestwks), data = births)		
summary(mPs)	
@
From the output given by \texttt{summary()} you find that
the estimated intercept is here, too,
 equal to the overall mean birth weight in the data.
The estimated residual variance is given by ``\texttt{Scale est.}''
or from subobject \texttt{sig2} of the fitted \texttt{gam} object.
Taking square root you will obtain the estimated residual standard
deviation: 445.2 g.
<<mPs-sig2>>=
mPs$sig2
sqrt(mPs$sig2)
@
The degrees of freedom in this model are not computed as simply as in previous
models, and they typically are not integer-valued. However,
the fitted spline seems to consume only a little more degrees of freedom
as the 3rd degree polynomial above.
\item
As in previous models we shall plot the fitted curve together with
95 \% confidence intervals for the mean responses and 
95 \% prediction intervals for individual responses. Obtaining these
quantities from the fitted \texttt{gam} object requires a bit more work than
with \texttt{lm} objects
<<bweight-gestwks-mPs-plot, fig=T>>=	
pr.Ps <- predict( mPs, newdata=nd, se.fit=T)
par(mfrow=c(1,1))
with(births, plot(bweight ~ gestwks, xlim=c(24, 45), cex.axis=1.5, cex.lab=1.5) )
matlines( nd$gestwks, cbind(pr.Ps$fit, 
  pr.Ps$fit - 2*pr.Ps$se.fit, pr.Ps$fit + 2*pr.Ps$se.fit),  
  lty=1, lwd=c(3,2,2), col=c('red','blue','blue') )
matlines( nd$gestwks, cbind(pr.Ps$fit, 
  pr.Ps$fit - 2*sqrt( pr.Ps$se.fit^2 + mPs$sig2), 
  pr.Ps$fit + 2*sqrt( pr.Ps$se.fit^2 + mPs$sig2)),  
  lty=1, lwd=c(3,2,2), col=c('red','green','green')  )
@   
The fitted curve is indeed clearly more reasonable than the polynomial.

\end{enumerate}

\subsection{Testis cancer: Data input and housekeeping}

We shall now switch to analyzing the incidence of testis cancer in Denmark during 1943--1998
by age and calendar time or period.

\begin{enumerate}[resume]
%----------------------------------------------------------------------
\item 
Load the data and inspect its structure:
<<data-input>>=
 library( Epi )
 data( testisDK )
 str( testisDK )
 summary( testisDK )
 head( testisDK )
@
\item There are nearly 5000 observations from 90 one-year age groups and 54 calendar years.
To get a clearer picture of what's going one we 
do some housekeeping. The age range will be limited to 15--79 years, and age and period
are both categorised into 5-year intervals -- according to the time-honoured practice in epidemiology.
<<housekeeping>>=
tdk <- subset(testisDK, A > 14 & A < 80)
tdk$Age <- cut(tdk$A, br = 5*(3:16), include.lowest=T, right=F)
nAge <- length(levels(tdk$Age))
tdk$P <- tdk$P - 1900
tdk$Per <- cut(tdk$P, br = seq(43, 98, by = 5),   
     include.lowest=T, right=F)
nPer <- length(levels(tdk$Per))
@
\end{enumerate}

\subsection{Some descriptive analysis}

Computation and tabulation of incidence rates

\begin{enumerate}[resume]
\item
Tabulate numbers of cases and person-years, and 
compute the incidence rates (per 100,000 y)
 in each 5 y $\times$ 5 y cell
 using \texttt{stat.table()}
<<tabulation>>=
tab <- stat.table(  index = list(Age, Per),
                 contents = list(D = sum(D), Y = sum(Y/1000),
                              rate = ratio(D, Y, 10^5) ),
     margins = TRUE, data = tdk )										
print(tab, digits=c(sum=0, ratio=1))	
@

Look at the incidence rates in the column margin and in the row margin.
In which age group is the marginal age-specific rate highest?
Do the period-specific marginal rates have any trend over time?

\item
From the saved table object \texttt{tab}
 you can plot an age-incidence curve for each period separately,
 after you have checked the structure of the table, so that you know the
relevant dimensions in it.
<<plot-rates, fig=T>>=
str(tab)
par(mfrow=c(1,1))
plot( c(15,80), c(1,30), type='n', log='y', cex.lab = 1.5, cex.axis = 1.5, 
   xlab = "Age (years)", ylab = "Incidence rate (per 100000 y)") 
for (p in 1:nPer)
   lines( seq(17.5, 77.5, by = 5), tab[3, 1:nAge, p], type = 'o', pch = 16 ,
	   lty = rep(1:6, 2)[p] )
@		
Is there any common pattern in the age-incidence curves across the periods?

\end{enumerate}
%----------------------------------------------------------------------

\subsection{Age and period as categorical factors}

We shall first  fit a Poisson regression model with log link
on age and period model in the traditional way,
in which both factors are treated as categorical.
The model is additive on the log-rate scale.
It is useful to scale the person-years to be expressed in $10^5$ y.
\begin{enumerate}[resume]
\item
<<mCat>>=
mCat <- glm( D ~ Age + Per, offset=log(Y/100000), family=poisson, data= tdk )
round( ci.exp( mCat ), 2)
@
What do the estimated rate ratios tell about the age and period effects? 

\item
A graphical inspection of point estimates and confidence intervals
can be obtained as follows. In the beginning it is useful to
define shorthands for the pertinent mid-age and mid-period values of the
different intervals  
<<mCat-est, fig=T>>=
aMid <- seq(17.5, 77.5, by = 5)
pMid <- seq(45, 95, by = 5)
par(mfrow=c(1,2))
plot( c(15,80), c(0.6, 6), type='n', log='y', cex.lab = 1.5, cex.axis = 1.5, 
   xlab = "Age (years)", ylab = "Rate ratio") 
lines( aMid,  c( 1, ci.exp(mCat)[2:13, 1] ), type = 'o', pch = 16 )
segments( aMid[-1],  ci.exp(mCat)[2:13, 2], aMid[-1], ci.exp(mCat)[2:13, 3] ) 
plot( c(43, 98), c(0.6, 6), type='n', log='y', cex.lab = 1.5, cex.axis = 1.5, 
   xlab = "Calendar year - 1900", ylab = "Rate ratio") 
lines( pMid,  c( 1, ci.exp(mCat)[14:23, 1] ), type = 'o', pch = 16 )
segments( pMid[-1],  ci.exp(mCat)[14:23, 2], pMid[-1], ci.exp(mCat)[14:23, 3] ) 
@
\item
In the fitted model the reference category for each factor was the first one.
As age is the dominating factor, it may be  more informative to remove the intercept from the model.
As a  consequence the age effects describe fitted rates at the reference level
of the period factor. For the latter one could choose the middle period 1968-72.
<<mCat2-new-ref>>=
tdk$Per70 <- Relevel(tdk$Per, ref = 6)
mCat2 <- glm( D ~ -1 + Age +Per70, offset=log(Y/100000), family=poisson, data= tdk )
round( ci.exp( mCat2 ), 2)
@
We shall plot just the point estimates from the latter model
<<mCat2-plot, fig=T>>=
par(mfrow=c(1,2))
plot( c(15,80), c(2, 20), type='n', log='y', cex.lab = 1.5, cex.axis = 1.5, 
   xlab = "Age (years)", ylab = "Incidence rate (per 100000 y)") 
lines( aMid,  c(ci.exp(mCat2)[1:13, 1] ), type = 'o', pch = 16 )
plot( c(43, 98), c(0.4, 2), type='n', log='y', cex.lab = 1.5, cex.axis = 1.5, 
   xlab = "Calendar year - 1900", ylab = "Rate ratio") 
lines( pMid, c(ci.exp(mCat2)[14:18, 1], 1, ci.exp(mCat2)[19:23, 1]),  
   type = 'o', pch = 16 )
@
\end{enumerate}

\subsection{Generalized additive model with penalized splines}

It is obvious that the age effect on the log-rate scale 
is highly non-linear, but it is less clear whether
 the true period effect deviates from linearity. Nevertheless,
there are good indications to try fitting smooth continuous functions
for both. 
\begin{enumerate}[resume]
\item
As the next task we fit
a generalized additive model for the log-rate on continuous age and period
applying penalized splines with default settings of function \texttt{gam()} in
package \texttt{mgcv}. In this fitting an ``optimal'' value for the penalty
parameter is chosen based on an AIC-like criterion known as UBRE.
<<mPen>>=
library(mgcv)
mPen <- gam( D ~ s(A) + s(P), offset = log(Y/100000), 
           family = poisson, data = tdk)
summary(mPen)					
@ 
The summary is quite brief, and the only estimated coefficient is the
intercept, which sets the baseline level for the log-rates, against which
the relative age effects and period effects will be contrasted.
On the rate scale the baseline level (per 100000 y) is obtained by \texttt{exp(1.7096)}
\item
See also the default plot for the fitted curves (solid lines) describing the age and the period effects
which are interpreted as contrasts to the baseline level on the log-rate scale.
<<mPen-plot, fig=T>>=
par(mfrow=c(1,2))
plot(mPen, seWithMean=T)
abline(v = 68, lty=3)
abline(h = 0, lty=3)
@
The dashed lines describe the 95 \% confidence band for the pertinent curve.
One could get the impression that year 1968 would be some kind of reference value for the period
effect, as it was in the categorical model previously fitted. This is not the case, however, because
{\tt gam()} by default 
parametrizes the spline effects such that the reference level, at which the spline effect is nominally zero,
 is the overall ``grand mean''
value of the log-rate in the data. This corresponds to the principle of {\it sum contrasts} ({\tt contr.sum})
for categorical explanatory factors.

% The confidence band indicates, namely,
% that there is uncertainty about the true age effect curve about the overall (``grand mean'')
% log-rate both in vertical and in horizontal direction, and there is no fixed reference level.  

From the summary you will also find that the degrees of freedom value required for the age effect
is nearly the same as the default dimension $k-1 = 9$ of the part of the model matrix (or basis)
initially allocated for each smooth function. (Here $k$ refers to the
relevant argument that determines the basis dimension when specifying a smooth term by \texttt{s()}
in the model formula). 
On the other hand the period effect takes just about 3 df.

\item
It is a good idea to do some diagnostic checking of the fitted model
<<mPen-check>>=
gam.check(mPen)					
@ 
The four diagnostic plots are analogous to some of those used in
the context of linear models for Gaussian responses, but not all of them
may be as easy to interpret. -- Pay attention to the note
given in the printed output about the value of \texttt{k}.

\item
Let us refit the model but now with an increased \texttt{k} for age:
<<mPen2>>=
mPen2 <- gam( D ~ s(A, k=20) + s(P), offset = log(Y/100000), 
           family = poisson, data = tdk)
summary(mPen2)
gam.check(mPen2)					
@ 
With this choice of \texttt{k} the df value for age became about 11, which is well below 
$k-1 = 19$. Let us plot the fitted curves from this fitting, too
<<mPen2-plot, fig=T>>=
par(mfrow=c(1,2))
plot(mPen2, seWithMean=T)
abline(v = 68, lty=3)
abline(h = 0, lty=3)
@
There does not seem to have happened any essential changes from the previously fitted curves,
so maybe 8 df could, after all,  be quite enough for the age effect.

\item
Graphical presentation of the effects can be improved from that supported by \texttt{plot.gam()}.
We can, for instance, present the age curve to describe the ``mean'' incidence rates by age, 
averaged over the 54 years. 
For that purpose we need to merge the intercept with the age effect.
The period curve will be expressed in terms of rate ratios in relation to the fitted baseline rate,
as determined by the model intercept.

In order to produce these plots one needs to extract certain items from the fitted \texttt{gam}
object \texttt{mPen2} and do some calculations. A source script named ``\texttt{plotPenSplines.R}''
that does all of that can be found from the \texttt{/R} subdirectory on the course website.
<<mPen2-plotAge, fig=T>>=
source("http://bendixcarstensen.com/SPE/R/plotPenSplines.R")
@ 
\end{enumerate}
One could continue the analysis of these data by fitting an age-cohort model as an alternative to the 
age-period model, as well as an age-cohort-period model. 

\begin{comment}

\subsection{Generalized additive model with natural regression splines}

\item 
Instead of penalized splines one may 
use ordinary regression splines, in which the user
specifies the model matrix (basis) by choosing a suitable number of knots
and their locations. We prefer natural splines for the purpose.
Fitting these models can be done with \texttt{glm()} such that
in the model formula the spline components are defined by function \texttt{Ns()} 
<<mNs>>=
mNs <- glm( D ~ Ns(A, knots = seq(15, 75, 10)) +
                  Ns(P, knots = seq(50, 90, 10)),
                  offset=log(Y), family=poisson, data=tdk )
summary( mNs)
@

Again, the summary provides not so interpretable quantities, so we need graphical
presentation of the effects.

\item 
As in previous models we want to describe the age effect on the original rate scale
merging the intercept. In the categorical model
we chose the years 1968--72 as the reference period.
Here we assign year 1970 as the reference calendar year,
so that the age curve describes the estimated age effect
and the period curve describes the rate ratio of
each calendar year versus the reference year. 
To this end we can utilize function \texttt{ci.exp()} 
with suitable contrast matrices for age and period, that comply with 
the structure of the fitted splines for both effects
as well as the desire to keep year 1970 as the reference calendar year.
All of that can be done with the following piece of script
<<mNs10-plot, fig=T>>=
aa <- 15:79
pp <- 43:96
As <- Ns( aa, knots=seq(15, 75, 10) )
Ps <- Ns( pp, knots=seq(50, 90, 10) )
Ar <- Ns( rep(70, length(aa)), knots=seq(50, 90, 10) )
Pr <- Ns( rep(70, length(pp)), knots=seq(50, 90, 10) )
par(mfrow=c(1,2))
matplot( aa, ci.exp( mNs, ctr.mat =cbind(1, As, Ar) )*10^5,
          log="y", xlab="Age", ylab="Incidence rate (per 100000 y)",
          type="l", lty=1, lwd=c(3,1,1), col = c("red", "blue",  "blue") )
matplot( pp, ci.exp( mNs, ctr.mat = Ps - Pr, subset="P" ),
          log="y", xlab="Year", ylab="Rate ratio",
          type="l", lty=1, lwd=c(3,1,1), col= c("red", "blue",  "blue") )
@
Inspect the curves. Are they very different from those you got
from the penalized splines model?

One obvious difference is found in the way the error margins for the
period effect are displayed. In the current model
a specific reference calendar year, 1970, was chosen as a fixed reference point,
and the rate ratio for all other calendar times describes
a contrast of that time point versus year 1970. Therefore, there is 
no uncertainty in the rate ratio for 1970. In the penalized splines model
no time point was explicitly chosen as a fixed reference,
and the fitted period curve as well as its confidence band aims at 
estimating the period effect in relation to the baseline
rate, and the uncertainty concerns the location of the whole curve.

\item
Fit another spline model but now with 
greater numbers of knots. For instance, for age
you may assign 13 knots from 15 to 75 years in steps of 5 years,
 and for period 11 knots from 45 to 95 years.
Plot also the estimated age and period effects
and comment the difference to our first spline model.

\end{enumerate}

\end{comment}

\begin{comment}

%----------------------------------------------------------------------
% \item Collect these steps in a general outline, where you first define
%   the knots, and the points of age and period prediction, and then fit
%   the model and do the two plots.

\item In order to all do this in one go where we have overview of
  what we do, what is needed is:
  \begin{itemize}
  \item the knots for age and period
  \item the prediction points for age and period
  \item the reference point for period
  \end{itemize}
  --- then we can derive everything else from this:
<<all items>>=
 a.kn <- seq(15,75,10)
 p.kn <- seq(50,90,10)
 a.pt <- 15:75
 p.pt <- 45:95
 p.ref <- 70
 na <- length(a.pt)
 np <- length(p.pt)
 As <- Ns( a.pt, knots=a.kn )
 Ps <- Ns( p.pt, knots=p.kn )
 Prp <- Ns( rep(p.ref,np), knots=p.kn )
 Pra <- Ns( rep(p.ref,na), knots=p.kn )
 mAP <- glm( D ~ Ns(A,knots=a.kn) + Ns(P,knots=p.kn),
                 offset=log(Y), family=poisson, data= tdk )
 par( mfrow=c(1,2) )
 matplot( a.pt, ci.exp( mAP, ctr.mat=cbind(1,As,Pra) )*10^5,
          log="y", xlab="Age",
          ylab=paste( "Incidence (/100,000 y) in", p.ref ),
          type="l", lty=1, lwd=c(3,1,1), col="black",
          ylim=c(1,20) )
 matplot( p.pt, ci.exp( mAP, ctr.mat=Ps-Prp, subset="P" ),
          log="y", xlab="Age", ylab="Rate ratio",
          type="l", lty=1, lwd=c(3,1,1), col="black",
          ylim=c(1,20)/4 )
 abline( h=1, v=p.ref )
@

% %----------------------------------------------------------------------
% \item Form a new variable in the data frame, \texttt{B=P-A}, the data
%   of birth, and repeat the last analysis with this variable instead of
%   \texttt{P}.

\item Finally with this in place we could do the same for a model
  where we had replaced \texttt{P}, the data of follow-up by the the
  date of birth, \texttt{B=P-A}:
<<Age-cohort>>=
 tdk <- transform( tdk, B = P-A )
 # with( testisDK, hist( rep(B,D), breaks=100, col="black" ) )
 a.kn <- seq(15,75,5)
 b.kn <- seq(00,70,5)
 a.pt <- 10:75
 b.pt <- (-10):70
 b.ref <- 40
 na <- length(a.pt)
 nb <- length(b.pt)
 As <- Ns( a.pt, knots=a.kn )
 Bs <- Ns( b.pt, knots=b.kn )
 Brb <- Ns( rep(b.ref,nb), knots=b.kn )
 Bra <- Ns( rep(b.ref,na), knots=b.kn )
 mAB <- glm( D ~ Ns(A,knots=a.kn) + Ns(B,knots=b.kn),
                 offset=log(Y), family=poisson, data= tdk )
 par( mfrow=c(1,2) )
 matplot( a.pt, ci.exp( mAB, ctr.mat=cbind(1,As,Bra) )*10^5,
          log="y", xlab="Age",
          ylab=paste( "Incidence per 100,000 y, in", b.ref, "birth cohort"),
          type="l", lty=1, lwd=c(3,1,1), col= c("red", "blue",  "blue") ,
          ylim=c(1,20) )
 matplot( b.pt, ci.exp( mAB, ctr.mat=Bs-Brb, subset="B" ),
          log="y", xlab="Age", ylab="Rate ratio",
          type="l", lty=1, lwd=c(3,1,1),  col= c("red", "blue", "blue") ,
          ylim=c(1,20)/4 )
 abline( h=1, v=b.ref )
@
\end{enumerate}

\end{comment}